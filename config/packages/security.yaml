security:
    #enable_authenticator_manager: true
    encoders:
        App\Entity\Utilisateur:
            algorithm: auto

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        app_user_provider:
            entity:
                class: App\Entity\Utilisateur
                property: nomDeLaSociete
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
            lazy: true
            stateless: false
            provider: app_user_provider
            guard:
                authenticators:
                    - App\Security\UtilisateurAuthenticator
            logout:
                path: app_logout #gestion de la deconnexion
                # where to redirect after logout
                target: / #chemin apres deconnexion
            #login_throttling:
            #   max_attempts: 5
            #login_throttling:
            #      max_attempts: 3
            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site ***requires_channel: https
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/, roles: PUBLIC_ACCESS,requires_channel: https } #URL autorisé au visiteur anonymous
        - { path: ^/login, roles: PUBLIC_ACCESS,requires_channel: https} #URL autorisé au visiteur anonymous
        - { path: ^/login-/, roles: PUBLIC_ACCESS,requires_channel: https } #URL autorisé au visiteur anonymous
        - { path: ^/admin, roles: ROLE_ADMIN,requires_channel: https } #URL DEFINI POUR ROLE ADMIN
        - { path: ^/monAppli, roles:  [ ROLE_ADMIN, ROLE_USER],requires_channel: https } #URL DEFINI POUR ROLE USER


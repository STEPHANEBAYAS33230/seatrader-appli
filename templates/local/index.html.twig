
{% extends 'baseUser.html.twig' %}

{% block title %}home |{{ parent() }}{% endblock %}

 {% block stylesheets %}
     <link rel="stylesheet" href="{{ asset('assets/css/ajouterProduits.css') }}">
 {% endblock %}

{% block main %}
    <div class="container marge-container">
        <div class="row">

        <div id="infoposition" class="mt-6 cadrelogistique">POSITION</div>
            <h1>POSITION</h1>
        <div id="infoposition2" class="mt-2 cadrelogistique">---</div>
        </div>
    </div>
    <script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=false&libraries=geometry"></script>
        <script type="text/javascript" >
            let oldLat=44.8378;
            let oldLong=-0.59444;
            let distanceParcours=0;
            if(navigator.geolocation) {
                setInterval(alertpos, 5000);
            }
            function maPosition(position) {
                let infopos = "Position déterminée :\n";
                let Nlat=position.coords.latitude;
                let Nlong=position.coords.longitude;
                infopos += "Latitude : "+Nlat+"\n";
                infopos += "Longitude: "+Nlong+"\n";
                //infopos += "Altitude : "+position.coords.altitude +"\n";
                if (oldLat==0 || oldLat==null && oldLong==0 || oldLong==null) {
                    oldLat=Nlat;
                    oldLong=Nlong;
                }
                var p1 = new google.maps.LatLng(oldLat,oldLong);
                var p2 = new google.maps.LatLng(Nlat, Nlong);
                let d=(google.maps.geometry.spherical.computeDistanceBetween(p1, p2) / 1000).toFixed(2);
                distanceParcours=distanceParcours+p;//distance(oldLong,oldLat,Nlong,Nlat);
                document.getElementById("infoposition").innerHTML = infopos;
                document.getElementById("infoposition2").innerHTML = "dist: "+distanceParcours;
                oldLat=Nlat;
                oldLong=Nlong;
            }
            function alertpos(){
                navigator.geolocation.getCurrentPosition(maPosition);}
            function surveillePosition(position) {
                let infopos = "Position déterminée :\n";
                infopos += "Latitude : "+position.coords.latitude +"\n";
                infopos += "Longitude: "+position.coords.longitude+"\n";
                infopos += "Altitude : "+position.coords.altitude +"\n";
                infopos += "Vitesse  : "+position.coords.speed +"\n";
                document.getElementById("infoposition").innerHTML = infopos;
            }

            // On déclare la variable survId afin de pouvoir par la suite annuler le suivi de la position
            //var survId = navigator.geolocation.watchPosition(surveillePosition);
            // Fonction de callback en cas d’erreur
            function erreurPosition(error) {
                var info = "Erreur lors de la géolocalisation : ";
                switch(error.code) {
                    case error.TIMEOUT:
                        info += "Timeout !";
                        break;
                    case error.PERMISSION_DENIED:
                        info += "Vous n’avez pas donné la permission";
                        break;
                    case error.POSITION_UNAVAILABLE:
                        info += "La position n’a pu être déterminée";
                        break;
                    case error.UNKNOWN_ERROR:
                        info += "Erreur inconnue";
                        break;
                }
            }
            //document.getElementById("infoposition").innerHTML = info;
            function distance(lon1, lat1, lon2, lat2) {
                var R = 6371; //Radius of the earth in km
                var dLat = (lat2-lat1).toRad();  //Javascript functions in radians
                var dLon = (lon2-lon1).toRad();
                var a = Math.sin(dLat/2) * Math.sin(dLat/2) +
                    Math.cos(lat1.toRad()) * Math.cos(lat2.toRad()) *
                    Math.sin(dLon/2) * Math.sin(dLon/2);
                var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));
                var d = R * c; //Distance in km
                return d;
            }

            /** Converts numeric degrees to radians */
            if (typeof(Number.prototype.toRad) === "undefined") {
                Number.prototype.toRad = function() {
                    return this * Math.PI / 180;
                }
            }
        </script>

{% endblock %}